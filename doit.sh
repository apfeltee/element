
items=(
  GetNextToken_IgnoreNewLine=getNextTokenNoLF
  GetCurrentToken=getCurrentToken
  SetInputStream=setInputStream
  SourceCoords=Location
  GetCurrentCoords=location
  GetLastIdentifier=getLastIdent
  GetLastInteger=getLastInteger
  GetLastFloat=getLastFloat
  GetLastBool=getLastBool
  Reset=reset
  GetNextChar=getNextChar
  HandleCommentsOrDivision=doCommentOrDiv
  HandleWords=doWord
  HandleNumbers=doNumber
  HandleColumns=doColumn
  HandleString=doString
  HandleSubtractOrArray=doSubtractOrArrow
  HandleLessOrPush=doLessOrPush
  HandleCharAndEqual=doCharAndEqual
  HandleGreaterOrPop=doGreaterOrPop
  HandleDollarSign=doDollarSign
  mLexer=m_lexer
  mContext=m_context
  mCurrentFunctionNode=m_currfuncnode
  mFunctionScope=m_funcscope
  mGlobalVariables=m_globalvars
  mNativeFunctions=m_nativefuncs

  AnalyzeNode=analyzeNode
  AnalyzeBinaryOperator=analyzeBinaryOperator
  CheckAssignable=checkAssignable
  IsBreakContinueReturn=isBreakContinueReturn
  IsBreakContinue=isBreakContinue
  IsReturn=isReturn
  IsInLoop=isInLoop
  IsInFunction=isInFunction
  IsInConstruction=isInConstruction
  ReslveNamesInNodes=resolveNamesInNodes
  ResolveName=resolveName
  TryToFindNameInTheEnclosingFunction=tryFindNameInEnclosing
  Interpret=interpret
  ResetState=resetState
  RegisterNativeFunction=addNative
  GetFileManager=getFileManager
  GetMemoryManager=getMemoryManager
  SetError=setError
  HasError=hasError
  ClearError=clearError
  mHeapHead=m_heaphead
  mGCStage=m_gcstage
  mCurrentWhite=m_currentwhite
  mNextWhite=m_nextwhite
  mGrayList=m_graylist
  mPreviousGC=m_prevgc
  mCurrentGC=m_currgc
  mDefaultModule=m_defmodule
  mModules=m_modules
  mExecutionContexts=m_excontexts
  mHeapStringsCount=m_heapstringscnt
  mHeapArraysCount=m_heaparrayscnt
  mHeapObjectsCount=m_heapobjectscnt
  mHeapFunctionsCount=m_heapfunctionscnt
  mHeapBoxesCount=m_heapboxescnt
  mHeapIteratorsCount=m_heapitercnt
  mHeapErrorsCount=m_heaperrorscnt
  GetVersion=getVersion
  MakeIteratorForValue=makeIterator
  GetNameFromHash=nameFromHash
  GetMember=getMember
  SetMember=setMember
  PushElement=pushElement
  AddElement=addElement
  CallFunction=callFunction
  CallMemberFunction=callMemberFunction
  ExecuteBytecode=execBytecode
  ParseBytecode=parseBytecode
  CallFunction_Common=commonCallFunction
  RunCode=runCode
  RunCodeForFrame=frameRunCode
  Call=call
  CallNative=callNative
  PushElementToArray=arrayPushElement
  PopElementFromArray=arrayPopElement
  LoadElementFromArray=arrayLoadElement
  StoreElementInArray=arrayStoreElement
  LodMemberFromObject=objectLoadMember
  StoreMemberInObject=objectStoreMember
  DoBinaryOperation=doBinaryOperation
  LogStackTraceStartingFrom=logStacktraceFrom
  RegisterStandardutilities=registerBuiltins
  LocationFromName=locationFromName
  mParser=m_parser
  mSemanticAnalyzer=m_analyzer
  mCompiler=m_compiler
  mFileManager=m_fileman
  mMemoryManager=m_memoryman
  mConstants=m_constants
  mConstantFunctions=m_constfunctions
  mConstantCodeObjects=m_constcodeobjects
  mNativeFunctions=m_natfuncs
  mSymbolNames=m_symnames
  mExecutionContext=m_execctx
  mStack=m_stack
  mErrorMessage=m_errmessage
  mErrorMessages=m_messages
  PushError=pushError
  HasErrorMessages=hasMessages
  GetCombinedErrorMessages=getCombined
  ClearErrorMessages=clearMessages
  NodeAsDebugString=nodeToString
  Equals=equals
  Clear=clear
  CalculateSize=getSize
  WriteConstant=writeConst
  ReadConstant=readConst
  AsDebugString=toString
  WriteSymbol=writeSymbol
  ReadSymbol=readSymbol
  mLoopContexts=m_loopcontexts
  mFunctionContexts=m_funcontexts
  mCurrentFunction=m_currfunction
  mConstants=m_constants
  mConstantsOffset=m_constoffset
  mSymbolIndices=m_symindices
  mSymbols=m_symbols
  Compile=compile
  EmitInstructions=emitInstructions
  BuildConstantLoad=buildConstLoad
  BuildVariableLoad=buildVarLoad
  BuildVariableStore=buildVarStore
  BuildAssignop=buildAssignOp
  BuildBooleanOp=buildBoolOp
  BuildArrowOp=buildArrowOp
  buildArrayPushPop=buildArrayPushPop
  BuildBinaryOp=buildBinaryOp
  BuildUnaryOp=buildUnaryOp
  BuildIf=buildIfStmt
  BuildWhile=buildWhileStmt
  BuildFor=buildForStmt
  BuildBlock=buildBlockStmt
  BuildFunction=buildFuncStmt
  BuildFunctionCall=buildFuncCall
  BuildArray=buildArrayLiteral
  BuildObject=buildObjectLiteral
  BuildYield=buildYield
  BuildHashLoadOp=buildHashLoadOp
  BuildJumpStatement=buildJumpStmt
  UpdateSymbol=updateSymbol
  BuildBinaryData=buildBinaryData
  IsGarbageCollected=isManaged
  IsNil=isNil
  IsFunction=isFunction
  IsArray=isArray
  IsObject=isObject
  IsString=isString
  IsBoolean=isBoolean
  IsNumber=isNumber
  IsFloat=isFloat
  IsInt=isInt
  IsBox=isBox
  IsIterator=isIterator
  IsError=isError
  AsInt=toInt
  AsFloat=asFloat
  AsBool=asBool
  AsHash=asHash
  AsString=asString
  UpdateGrayList=updateGrayList
  BytecodeSymbolsAsDebugString=bytecodeSymbolsToString
  BytecodeConstantsAsDebugString=bytecodeConstantsToString
  AddSearchPath=addSearchPath
  ClearSearchPaths=clearSearchPaths
  GetSearchPaths=getSearchPaths
  GetExecutablePath=getExePath
  PushFileToExecute=pushFileToExecute
  PopFileToExecute=popFileToExecute
  mLocationOfExecutingFile=m_locationofexecfile
  mSearchPaths=m_searchpaths
)

gsub -r  -f element.h -f ast.cpp -f compiler.cpp -f constant.cpp -f datatypes.cpp -f filemanager.cpp -f gc.cpp -f lexer.cpp -f logger.cpp -f main.cpp -f memory.cpp -f native.cpp -f opcodes.cpp -f operators.cpp -f parser.cpp -f semantic.cpp -f symbol.cpp -f tokens.cpp -f value.cpp -f vm.cpp -b "${items[@]}"

